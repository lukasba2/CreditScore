
// This file was auto-generated by ML.NET Model Builder. 

using CreditScoreClassification_ConsoleApp1;

// Create single instance of sample data from first line of dataset for model input
CreditScoreClassification.ModelInput sampleData = new CreditScoreClassification.ModelInput()
{
    ID = @"0x1603",
    Customer_ID = @"CUS_0xd40",
    Month = @"February",
    Name = @"Aaron Maashoh",
    Age = @"23",
    SSN = @"821-00-0265",
    Occupation = @"Scientist",
    Annual_Income = @"19114.12",
    Num_Bank_Accounts = 3F,
    Num_Credit_Card = 4F,
    Interest_Rate = 3F,
    Num_of_Loan = @"4",
    Type_of_Loan = @"Auto Loan, Credit-Builder Loan, Personal Loan, and Home Equity Loan",
    Delay_from_due_date = @"-1",
    Num_of_Delayed_Payment = @"",
    Credit_Mix = @"Good",
    Credit_History_Age = @"NA",
    Payment_of_Min_Amount = @"No",
    Total_EMI_per_month = @"49.57494921489417",
    Amount_invested_monthly = @"118.28022162236736",
    Payment_Behaviour = @"Low_spent_Large_value_payments",
    Monthly_Balance = @"284.62916249607184",
};



Console.WriteLine("Using model to make single prediction -- Comparing actual Credit_Score with predicted Credit_Score from sample data...\n\n");


Console.WriteLine($"ID: {@"0x1603"}");
Console.WriteLine($"Customer_ID: {@"CUS_0xd40"}");
Console.WriteLine($"Month: {@"February"}");
Console.WriteLine($"Name: {@"Aaron Maashoh"}");
Console.WriteLine($"Age: {@"23"}");
Console.WriteLine($"SSN: {@"821-00-0265"}");
Console.WriteLine($"Occupation: {@"Scientist"}");
Console.WriteLine($"Annual_Income: {@"19114.12"}");
Console.WriteLine($"Num_Bank_Accounts: {3F}");
Console.WriteLine($"Num_Credit_Card: {4F}");
Console.WriteLine($"Interest_Rate: {3F}");
Console.WriteLine($"Num_of_Loan: {@"4"}");
Console.WriteLine($"Type_of_Loan: {@"Auto Loan, Credit-Builder Loan, Personal Loan, and Home Equity Loan"}");
Console.WriteLine($"Delay_from_due_date: {@"-1"}");
Console.WriteLine($"Num_of_Delayed_Payment: {@""}");
Console.WriteLine($"Credit_Mix: {@"Good"}");
Console.WriteLine($"Credit_History_Age: {@"NA"}");
Console.WriteLine($"Payment_of_Min_Amount: {@"No"}");
Console.WriteLine($"Total_EMI_per_month: {@"49.57494921489417"}");
Console.WriteLine($"Amount_invested_monthly: {@"118.28022162236736"}");
Console.WriteLine($"Payment_Behaviour: {@"Low_spent_Large_value_payments"}");
Console.WriteLine($"Monthly_Balance: {@"284.62916249607184"}");
Console.WriteLine($"Credit_Score: {@"Good"}");


var sortedScoresWithLabel = CreditScoreClassification.PredictAllLabels(sampleData);
Console.WriteLine($"{"Class",-40}{"Score",-20}");
Console.WriteLine($"{"-----",-40}{"-----",-20}");

foreach (var score in sortedScoresWithLabel)
{
    Console.WriteLine($"{score.Key,-40}{score.Value,-20}");
}

Console.WriteLine("=============== End of process, hit any key to finish ===============");
Console.ReadKey();

